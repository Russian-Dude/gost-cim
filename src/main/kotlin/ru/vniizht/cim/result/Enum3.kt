import java.time.LocalDateTime
import java.util.*

/** Причина, по которой значение получено */
enum class ReadingReasonKind {
    /** Показания принимаются или должны приниматься в ответ на запрос клиента или другой стороны, связанный с выставлением счетов. Подвариант inquiry */
    billing,
    /** Показания принимаются или должны приниматься в сочетании со сбросом одного или нескольких регистров сброса в приборе учета */
    demandReset,
    /** Показания принимаются или должны приниматься в ответ на запрос клиента или другой стороны */
    inquiry,
    /** Показания принимаются или должны приниматься в сочетании с установкой прибора учета */
    installation,
    /** Показания принимаются или должны приниматься для поддержки управления нагрузками в распределительных сетях или устройствах */
    loadManagement,
    /** Показания принимаются или должны приниматься для поддержки исследований и анализа нагрузок на распределительные сети или устройства */
    loadResearch,
    /** Показания принимаются или должны приниматься в связи с событием заезда клиента */
    moveIn,
    /** Показания принимаются или должны приниматься в связи с событием переезда клиента */
    moveOut,
    /** Другое */
    other,
    /** Показания принимаются или должны приниматься в сочетании со снятием прибора учета */
    removal,
    /** Показания принимаются или должны приниматься в сочетании с подключением или повторным подключением услуги */
    serviceConnect,
    /** Показания принимаются или должны приниматься в связи с отключением услуги */
    serviceDisconnect
}

/** Обозначение фаз */
enum class SinglePhaseKind {
    /** Фаза A */
    A,
    /** Фаза B */
    B,
    /** Фаза C */
    C,
    /** Нейтраль */
    N
}

/** Вид состояния пломбы */
enum class SealConditionKind {
    /** Сломана */
    broken,
    /** Заблокирована */
    locked,
    /** Отсутствует */
    missing,
    /** Открыта */
    open,
    /** Другое */
    other
}

/** Вид корпоративного стандарта */
enum class CorporateStandardKind {
    /** Модель материального объекта используется экспериментально */
    experimental,
    /** Другое */
    other,
    /** Модель материального объекта используется в качестве корпоративного стандарта */
    standard,
    /** Использование модели материального объекта находится в стадии оценки */
    underEvaluation
}

/** Состояние точки поставки по отношению к подключению к сети */
enum class UsagePointConnectedKind {
    /** Точка поставки подключена к сети и может принимать или отправлять соответствующий товар (электричество, газ, вода и т.д.) */
    connected,
    /** Точка поставки была отключена в результате срабатывания функции отключения в приборе учета, присутствующем в точке поставки */
    logicallyDisconnected,
    /** Точка поставки была отключена от сети в точке перед прибором учета */
    physicallyDisconnected
}

/** Состояние готовности к работе */
enum class InUseStateKind {
    /** В работе или готовится к работе */
    inUse,
    /** Готово к вводу в работу */
    readyForUse,
    /** Не готово для ввода в работу */
    notReadyForUse
}

/** Вид технической спецификации */
enum class rf_PACSTechnicalSpecificationKind {
    /** Паспорт */
    passport,
    /** Руководство по эксплуатации */
    manual,
    /** Спецификация комплектующих */
    equipmentSpecification
}

/** Типы регулирования */
enum class RegulatingControlModeKind {
    /** Регулирование активной мощности */
    activePower,
    /** Регулирование проводимости */
    admittance,
    /** Регулирование тока */
    currentFlow,
    /** Регулирование коэффициента мощности */
    powerFactor,
    /** Регулирование реактивной мощности */
    reactivePower,
    /** Включение/отключение в зависимости от температуры (термостат) */
    temperature,
    /** Включение/отключение по расписанию */
    timeScheduled,
    /** Регулирование напряжения */
    voltage
}

/** Тип охлаждения */
enum class CoolingKind {
    /** Естественная циркуляция воздуха и масла */
    selfCooling,
    /** Принудительная циркуляция воздуха и естественная циркуляция масла */
    forcedAir,
    /** Принудительная циркуляция воздуха и масла */
    forcedOilAndAir,
    /** Естественная циркуляция воздуха и принудительная циркуляция масла */
    forcedOil,
    /** Принудительная циркуляция воды и масла */
    forcedOilAndWater,
    /** Другой вид охлаждения */
    other
}

/** Ориентация координатной плоскости схемы */
enum class OrientationKind {
    /** Правосторонняя система координат (начало координат в верхнем левом углу) */
    positive,
    /** Левосторонняя система координат (начало координат в нижнем левом углу) */
    negative
}